/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: peripherals.proto */

#ifndef PROTOBUF_C_peripherals_2eproto__INCLUDED
#define PROTOBUF_C_peripherals_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _DirectionalVector DirectionalVector;
typedef struct _BNO055 BNO055;


/* --- enums --- */


/* --- messages --- */

struct  _DirectionalVector
{
  ProtobufCMessage base;
  double x;
  double y;
  double z;
};
#define DIRECTIONAL_VECTOR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&directional_vector__descriptor) \
    , 0, 0, 0 }


struct  _BNO055
{
  ProtobufCMessage base;
  DirectionalVector *direction;
};
#define BNO055__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bno055__descriptor) \
    , NULL }


/* DirectionalVector methods */
void   directional_vector__init
                     (DirectionalVector         *message);
size_t directional_vector__get_packed_size
                     (const DirectionalVector   *message);
size_t directional_vector__pack
                     (const DirectionalVector   *message,
                      uint8_t             *out);
size_t directional_vector__pack_to_buffer
                     (const DirectionalVector   *message,
                      ProtobufCBuffer     *buffer);
DirectionalVector *
       directional_vector__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   directional_vector__free_unpacked
                     (DirectionalVector *message,
                      ProtobufCAllocator *allocator);
/* BNO055 methods */
void   bno055__init
                     (BNO055         *message);
size_t bno055__get_packed_size
                     (const BNO055   *message);
size_t bno055__pack
                     (const BNO055   *message,
                      uint8_t             *out);
size_t bno055__pack_to_buffer
                     (const BNO055   *message,
                      ProtobufCBuffer     *buffer);
BNO055 *
       bno055__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   bno055__free_unpacked
                     (BNO055 *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*DirectionalVector_Closure)
                 (const DirectionalVector *message,
                  void *closure_data);
typedef void (*BNO055_Closure)
                 (const BNO055 *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor directional_vector__descriptor;
extern const ProtobufCMessageDescriptor bno055__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_peripherals_2eproto__INCLUDED */
