/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: logs.proto */

#ifndef PROTOBUF_C_logs_2eproto__INCLUDED
#define PROTOBUF_C_logs_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/timestamp.pb-c.h"
#include "peripherals.pb-c.h"

typedef struct _Logs Logs;
typedef struct _Logs__LogEntry Logs__LogEntry;


/* --- enums --- */


/* --- messages --- */

struct  _Logs__LogEntry
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *timestamp;
  BNO055 *bno055;
};
#define LOGS__LOG_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logs__log_entry__descriptor) \
    , NULL, NULL }


struct  _Logs
{
  ProtobufCMessage base;
  size_t n_log;
  Logs__LogEntry **log;
};
#define LOGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logs__descriptor) \
    , 0,NULL }


/* Logs__LogEntry methods */
void   logs__log_entry__init
                     (Logs__LogEntry         *message);
/* Logs methods */
void   logs__init
                     (Logs         *message);
size_t logs__get_packed_size
                     (const Logs   *message);
size_t logs__pack
                     (const Logs   *message,
                      uint8_t             *out);
size_t logs__pack_to_buffer
                     (const Logs   *message,
                      ProtobufCBuffer     *buffer);
Logs *
       logs__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logs__free_unpacked
                     (Logs *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Logs__LogEntry_Closure)
                 (const Logs__LogEntry *message,
                  void *closure_data);
typedef void (*Logs_Closure)
                 (const Logs *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor logs__descriptor;
extern const ProtobufCMessageDescriptor logs__log_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_logs_2eproto__INCLUDED */
